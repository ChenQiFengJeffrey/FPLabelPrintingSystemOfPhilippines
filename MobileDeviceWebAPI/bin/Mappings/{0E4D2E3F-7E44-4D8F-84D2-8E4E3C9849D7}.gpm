{
    "fields": [
        {
            "name": "id",
            "type": "int"
        },
        {
            "name": "vehicleinfo",
            "type": "auto"
        },  
        {
            "name": "dispatchingno",
            "type": "string"
        },         
        {
            "name": "time",
            "type": "date"
        },
        {
            "name": "operator",
            "type": "auto"
        },
        {
            "name": "name",
            "type": "string",
            "mapping": "vehicleinfo.name"
        },         
        {
            "name": "driver",
            "type": "string",
            "mapping": "vehicleinfo.driver"
        }, 
        {
            "name": "telephone",
            "type": "string",
            "mapping": "vehicleinfo.telephone"
        }, 
        {
            "name": "type",
            "type": "string",
            "mapping": "vehicleinfo.type"
        },
        {
            "name": "timeofreceipt",
            "type": "date"
        }, 
        {
            "name": "pod",
            "type": "string"
        } 
    ],
    "columns": [
        {
            "header": "Plate No.",
            "dataIndex": "name",
            "hidden": false,
            "width": 130
        },
                    {
            "header": "Delivery No.",
            "dataIndex": "dispatchingno",
            "hidden": false,
            "width": 130
        },
        {
            xtype: 'datecolumn',                                           
            dataIndex: 'time',
            text: 'Delivery Time',
            format:'Y-m-d H:i:s',
            width:130
        },        
        {
            "header": "Driver ",
            "dataIndex": "driver",
            "hidden": false,
            "width": 130
        },
                        {
            "header": "Telephone",
            "dataIndex": "telephone",
            "hidden": false,
            "width": 130
        },
        {
            "header": " Vehicle Type",
            "dataIndex": "type",
            "hidden": false,
            "width": 130
        },
        {
            xtype: 'datecolumn',                                           
            dataIndex: 'timeofreceipt',
            text: 'Signed Time',
            format:'Y-m-d H:i:s',
            width:130
        },
        {
            "header":"Signed Receipt ",
            "menuDisabled": true,
            "xtype":'actioncolumn',
            "hidden": false,
            "width": 100,
            items:[
                {
                    getClass: function(v, meta, rec) {
                        if (Ext.isEmpty(rec.get("pod"))) {
                            return 'upload-file';
                        } else {
                            return 'download-file';
                        }
                    },
                    getTip: function(v, meta, rec) {
                        if (Ext.isEmpty(rec.get("pod"))) {
                            return '上传签收单';
                        } else {
                            return '下载签收单';
                        }
                    },
                    handler: function(grid, rowIndex, colIndex) {
                        var rec = grid.getStore().getAt(rowIndex),
                            action = (Ext.isEmpty(rec.get("pod")) ? 'uploadpod' : 'downloadpod');

                        if(action == "uploadpod"){ 
            
                           var params = {};
                                
                            //params.handler = strCustomer+"PrePickingScheduleRec";
                            params.handler = "uploadpodfile";
                            params.dispatchingno = rec.get("dispatchingno");

                            var win = Ext.getCmp("fileUploadWin");
                            if(win == undefined){
                                win=Ext.create("Pivots.ux.Window.UploadPODFileWindow",{
                                        id:'fileUploadWin',
                                        params:params,
                                        listeners:{
                                            'success':function(action){
                                                grid.store.load();
                                                win.close();
                                            }
                                        }
                                });
                            }
                            
                            win.show(); 
                        }
                        else{
                            var extraParams = {};
                            extraParams.filename = rec.get("pod");

                            var conn = Ext.create('Ext.data.Connection', {
                                method: 'POST',
                                extraParams : extraParams,
                                timeout:600000
                            });  

                            conn.request({ 
                                url: Pivots.core.Gobals.baseUrl + 'actions/ReportServices.ashx?action=0F28AB75403E4315A0947B2289743714',           
                                callback: function (options, success, response) {
                                    if(success){
                                        var r = new Ext.JSON.decode(response.responseText);
                                        
                                        if(r.success){                  
                                            downloadurl=Pivots.core.Gobals.baseUrl + 'actions/ReportServices.ashx?action=D5D8D8D894064223BCEDB41D8BCCF2ED&extractioncode='+r.extractioncode;
                                            window.location.href = downloadurl;               
                                        }
                                        else if(r.clienthandler!=null && r.clienthandler.length!=0){                    
                                            Pivots.core.CommonFunction.exceptionHandler(r.clienthandler,r); 
                                        }
                                        else{
                                            Pivots.core.CommonFunction.notifyMsgHandler(r);
                                        }                   
                                    }
                                    else{
                                        var reqst=response.status; 
                                        if(reqst=='-1'){                  // 超时的状态码为 -1
                                           Ext.Msg.getDialog().setWidth(500);
                                           Ext.MessageBox.alert("提示","发送超时,可能存在网络异常,检查后请重试...");
                                        }else{
                                           Ext.Msg.alert('提示','处理失败！');                
                                        }                   
                                    }
                                }
                            });
                        }
                    }
                },
                {
                    getClass: function(v, meta, rec) {
                        if (!Ext.isEmpty(rec.get("pod"))) {
                            return 'upload-file';
                        } 
                    },
                    getTip: function(v, meta, rec) {
                        if (!Ext.isEmpty(rec.get("pod"))) {
                            return '上传签收单';
                        } 
                    },
                    handler: function(grid, rowIndex, colIndex) {
                        var rec = grid.getStore().getAt(rowIndex),
                            action = (Ext.isEmpty(rec.get("pod")) ? '' : 'uploadpod');

                        if(action == "uploadpod"){ 
            
                           var params = {};
                                
                            //params.handler = strCustomer+"PrePickingScheduleRec";
                            params.handler = "uploadpodfile";
                            params.dispatchingno = rec.get("dispatchingno");

                            var win = Ext.getCmp("fileUploadWin");
                            if(win == undefined){
                                win=Ext.create("Pivots.ux.Window.UploadPODFileWindow",{
                                        id:'fileUploadWin',
                                        params:params,
                                        listeners:{
                                            'success':function(action){
                                                grid.store.load();
                                                win.close();
                                            }
                                        }
                                });
                            }
                            
                            win.show(); 
                        }
                    }
                },
                {
                    getClass: function(v, meta, rec) {
                        if (Ext.isEmpty(rec.get("pod"))) {
                        } else {
                            return 'remove-file';
                        }
                    },
                    getTip: function(v, meta, rec) {
                        if (Ext.isEmpty(rec.get("pod"))) {
                        } else {
                            return '删除签收单';
                        }
                    },
                    handler: function(grid, rowIndex, colIndex) {
                        var rec = grid.getStore().getAt(rowIndex),
                            action = (Ext.isEmpty(rec.get("pod")) ? '' : 'delete');

                        if(action == "delete"){ 
                            var extraParams = {};
                            extraParams.dispatchingno = rec.get("dispatchingno");

                            var conn = Ext.create('Ext.data.Connection', {
                                method: 'POST',
                                extraParams : extraParams,
                                timeout:600000
                            });  

                            conn.request({ 
                                url: Pivots.core.Gobals.baseUrl + 'actions/VehicleInfoServices.ashx?action=431431E78F834C77AEB6FFA09545968A',           
                                callback: function (options, success, response) {
                                    if(success){
                                        grid.store.load();                   
                                    }
                                    else{
                                        var reqst=response.status; 
                                        if(reqst=='-1'){                  // 超时的状态码为 -1
                                           Ext.Msg.getDialog().setWidth(500);
                                           Ext.MessageBox.alert("提示","发送超时,可能存在网络异常,检查后请重试...");
                                        }else{
                                           Ext.Msg.alert('提示','处理失败！');                
                                        }                   
                                    }
                                }
                            });
                        }
                    }
                }
            ]
        }          
    ]
}